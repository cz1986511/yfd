<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.danlu.dmall.persist.dao.BrandBaseMapper" >
  <resultMap id="BaseResultMap" type="com.danlu.dmall.persist.entity.BrandBase" >
    <id column="brand_id" property="brandId" jdbcType="BIGINT" />
    <result column="brand_code" property="brandCode" jdbcType="VARCHAR" />
    <result column="brand_name" property="brandName" jdbcType="VARCHAR" />
    <result column="brand_logo" property="brandLogo" jdbcType="VARCHAR" />
    <result column="brand_sort" property="brandSort" jdbcType="INTEGER" />
    <result column="brand_status" property="brandStatus" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    brand_id, brand_code, brand_name, brand_logo, brand_sort, brand_status, gmt_create, 
    gmt_modified
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from dmall_brand_base_info
    where brand_id = #{brandId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from dmall_brand_base_info
    where brand_id = #{brandId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.danlu.dmall.persist.entity.BrandBase" >
    insert into dmall_brand_base_info (brand_code, brand_name, 
      brand_logo, brand_sort, brand_status, 
      gmt_create, gmt_modified)
    values (#{brandCode,jdbcType=VARCHAR}, #{brandName,jdbcType=VARCHAR}, 
      #{brandLogo,jdbcType=VARCHAR}, #{brandSort,jdbcType=INTEGER}, #{brandStatus,jdbcType=VARCHAR}, 
      NOW(), NOW())
  </insert>
  <insert id="insertSelective" parameterType="com.danlu.dmall.persist.entity.BrandBase" >
    insert into dmall_brand_base_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="brandCode != null" >
        brand_code,
      </if>
      <if test="brandName != null" >
        brand_name,
      </if>
      <if test="brandLogo != null" >
        brand_logo,
      </if>
      <if test="brandSort != null" >
        brand_sort,
      </if>
      <if test="brandStatus != null" >
        brand_status,
      </if>
        gmt_create,
        gmt_modified
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="brandCode != null" >
        #{brandCode,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null" >
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="brandLogo != null" >
        #{brandLogo,jdbcType=VARCHAR},
      </if>
      <if test="brandSort != null" >
        #{brandSort,jdbcType=INTEGER},
      </if>
      <if test="brandStatus != null" >
        #{brandStatus,jdbcType=VARCHAR},
      </if>
        NOW(),
        NOW()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.danlu.dmall.persist.entity.BrandBase" >
    update dmall_brand_base_info
    <set >
      <if test="brandCode != null" >
        brand_code = #{brandCode,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null" >
        brand_name = #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="brandLogo != null" >
        brand_logo = #{brandLogo,jdbcType=VARCHAR},
      </if>
      <if test="brandSort != null" >
        brand_sort = #{brandSort,jdbcType=INTEGER},
      </if>
      <if test="brandStatus != null" >
        brand_status = #{brandStatus,jdbcType=VARCHAR},
      </if>
        gmt_modified = NOW()
    </set>
    where brand_id = #{brandId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.danlu.dmall.persist.entity.BrandBase" >
    update dmall_brand_base_info
    set brand_code = #{brandCode,jdbcType=VARCHAR},
      brand_name = #{brandName,jdbcType=VARCHAR},
      brand_logo = #{brandLogo,jdbcType=VARCHAR},
      brand_sort = #{brandSort,jdbcType=INTEGER},
      brand_status = #{brandStatus,jdbcType=VARCHAR},
      gmt_modified = NOW()
    where brand_id = #{brandId,jdbcType=BIGINT}
  </update>
</mapper>